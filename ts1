#include <iostream>
#include <string>
using namespace std;

struct Menu {
    int id;
    string name;
    double price;
};
void input(Menu a[], int size);
void show(int id, Menu a[], int size);
void showMenu(Menu a[], int size);
int findCheapest(Menu a[], int size);
int findByKeyword(string keyword, Menu a[], int size);
int findByName(string search, Menu a[], int size);
void orderByPriceAsc(Menu a[], int size);
void orderByPriceDesc(Menu a[], int size);
void orderByName(Menu a[], int size);
void calculateAndPrintBill(int itemId, Menu a[], int size);

int main() {
	
    const int menuSize = 10;
    Menu menu[menuSize];
    // Default items in the menu
    menu[0].id = 1;
    menu[0].name = "Black Coffee";
    menu[0].price = 12.000;

    menu[1].id = 2;
    menu[1].name = "White Coffee";
    menu[1].price = 19.000;

    menu[2].id = 3;
    menu[2].name = "Mix Coffee";
    menu[2].price = 18.000;

    menu[3].id = 4;
    menu[3].name = "Milk Tea";
    menu[3].price = 16.000;

    menu[4].id = 5;
    menu[4].name = "Salt Coffee";
    menu[4].price = 13.000;
    
    menu[5].id = 6;
    menu[5].name = "Americano Coffee";
    menu[5].price = 20.000;
    
    menu[6].id = 7;
    menu[6].name = "Espresso Coffee";
    menu[6].price = 11.000;
    
    menu[7].id = 8;
    menu[7].name = "Latte Coffee";
    menu[7].price = 17.000;
    
    menu[8].id = 9;
    menu[8].name = "Lemon Tea";
    menu[8].price = 14.000;

    menu[9].id = 10;
    menu[9].name = "Oolong Tea";
    menu[9].price = 15.000;
    
    int choice;
	
    do {
        cout << "Menu Options:" << endl;
        cout << "1. Input Menu" << endl;
        cout << "2. Show Menu" << endl;
        cout << "3. Find Cheapest Item" << endl;
        cout << "4. Search by Name" << endl;
        cout << "5. Order by Price (Ascending)" << endl;
        cout << "6. Order by Price (Descending)" << endl;
        cout << "7. Order by Name" << endl;
        cout << "0. Exit" << endl;
        cout << "Enter your choice: ";
        cin >> choice;
        cin.ignore();	

        switch (choice) {
            case 1:
                input(menu, menuSize);
                break;
            case 2:
                showMenu(menu, menuSize);
                cout << "Enter the ID of the item you want to order: ";
                int itemId;
                cin >> itemId;
                calculateAndPrintBill(itemId, menu, menuSize);
                break;
            case 3: {
    		int cheapestId = findCheapest(menu, menuSize);
   			 cout << "Cheapest item: ";
   			 show(cheapestId, menu, menuSize);

   			 int chooseOption;
   			 cout << "Choose an option:" << endl;
  			  cout << "1. Order the cheapest item" << endl;
  			  cout << "0. Back to Menu" << endl;
  			  cout << "Enter your choice: ";
  			  cin >> chooseOption;

   			 switch (chooseOption) {
      		  case 1:
            calculateAndPrintBill(cheapestId, menu, menuSize);
            break;
       		 case 0:
       		cout <<"Back to Menu!"<<endl;
            // Do nothing, this will go back to the main menu
            break;
       		 default:
            cout << "Invalid choice. Back to Menu." << endl;
           	 break;
    }
   			 break;
}
            case 4: {
    		string searchKeyword;
    		cout << "Enter the keyword to search: ";
   			cin >> searchKeyword;

   			int searchResult = findByKeyword(searchKeyword, menu, menuSize);
   			if (searchResult != -1) {
   		    cout << "Item found: ";
    	    show(searchResult, menu, menuSize);
     		calculateAndPrintBill(searchResult + 1, menu, menuSize);
   			 } else {
      		cout << "Item not found." << endl;
   			 }
   			 break;
		}
            case 5:
                orderByPriceAsc(menu, menuSize);
                cout << "Menu after ordering by price (ascending):" << endl;
                showMenu(menu, menuSize);
                break;
            case 6:
                orderByPriceDesc(menu, menuSize);
                cout << "Menu after ordering by price (descending):" << endl;
                showMenu(menu, menuSize);
                break;
            case 7:
                orderByName(menu, menuSize);
                cout << "Menu after ordering by name:" << endl;
                showMenu(menu, menuSize);
                break;
            case 0:
                cout << "Exiting the program. Goodbye!" << endl;
                break;
            default:
                cout << "Invalid choice. Please try again." << endl;
        }

    } while (choice != 0);

    return 0;
}

void input(Menu a[], int size) {
    for (int i = 0; i < size; ++i) {
        cout << "Enter details for item " << i + 1 << ":" << endl;
        a[i].id = i + 1;
        cout << "Name: ";
        cin.ignore(); // clear buffer
        getline(cin, a[i].name);
        cout << "Price: ";
        cin >> a[i].price;
    }
}

void show(int id, Menu a[], int size) {
    if (id >= 0 && id < size) {
        cout << "ID: " << a[id].id << ", Name: " << a[id].name << ", Price: " << a[id].price << endl;
    } else {
        cout << "Invalid ID." << endl;
    }
}

void showMenu(Menu a[], int size) {
    cout << "Menu:" << endl;
    for (int i = 0; i < size; ++i) {
        show(i, a, size);
    }
}

int findCheapest(Menu a[], int size) {
    int cheapestId = 0;
    for (int i = 1; i < size; ++i) {
        if (a[i].price < a[cheapestId].price) {
            cheapestId = i;
        }
    }
    return cheapestId;
}

int findByName(string search, Menu a[], int size) {
    for (int i = 0; i < size; ++i) {
        if (a[i].name == search) {
            return i;
        }
    }
    return -1;
}

void orderByPriceAsc(Menu a[], int size) {
    for (int i = 0; i < size - 1; ++i) {
        for (int j = i + 1; j < size; ++j) {
            if (a[j].price < a[i].price) {
                swap(a[i], a[j]);
            }
        }
    }
}

void orderByPriceDesc(Menu a[], int size) {
    for (int i = 0; i < size - 1; ++i) {
        for (int j = i + 1; j < size; ++j) {
            if (a[j].price > a[i].price) {
                swap(a[i], a[j]);
            }
        }
    }
}

void orderByName(Menu a[], int size) {
    for (int i = 0; i < size - 1; ++i) {
        for (int j = i + 1; j < size; ++j) {
            if (a[j].name < a[i].name) {
                swap(a[i], a[j]);
            }
        }
    }
}

void calculateAndPrintBill(int itemId, Menu a[], int size) {
    int itemIndex = itemId - 1; // Adjust ID to array index
    // Calculate total amount to be paid
    double totalAmount = a[itemIndex].price;

    // Display total amount and bill
    cout << "Total amount to be paid: " << totalAmount << endl;
    cout << "Thank you for your order! Here's your bill:" << endl;
    cout << "ID: " << a[itemIndex].id << ", Name: " << a[itemIndex].name << ", Price: " << a[itemIndex].price << endl;
}

